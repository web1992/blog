---
layout: post
title:  "project develop summary"
date:  2016-01-14 8:42:00 +0800
categories: project
tags: project
keywords: project,Jekyll,web1992
---


> project develop summary (项目开发总结)
> 

[核心功能的实现](#v1)

[细节](#v2)

[统一的架构(API)风格](#v3)

[可变性（可扩展)的控制](#v4)

[数据结构与算法](#v5)

[第三方的风险控制](#v6)

<!--more-->


-  核心功能的实现 <a href="#v1"></a>

> 本次项目的主要目标是什么，解决了什么问题，问题的难点
> 
> 技术实现问题的难度，成本，时间
>



-  细节 <a href="#v2"></a>

> 项目中的细节往往十分重要，项目开发前期的项目需求的细节要十分的`准确`
> 
> 细节往往决定这项目的`进度`，开发者的`设计思路`，甚至代码的整个`构架`
>



- 统一的架构(API)风格 <a href="#v3"></a>

> 提供统一的架构风格，开发效率可大幅提高
> 
> 方便项目的管理
> 
> 方便产品迭代，新人入手



- 可变性（可扩展)的控制 <a href="#v4"></a>

> 预知未来的业务变化
>
> 设计可扩展的代码
>
> 避免设计的坑，不要埋雷，后续也不需要踩雷
>


- 数据结构与算法 <a href="#v5"></a>

> 在遇到需要数据`算法`进行编程的时候，切记算法的正确性&算法要简单，意图要明确
>
> 这样在后续需要对算法进行修改时，也比较简单。避免坑。

- 系统本身安全&风险评估（控制）

> 任何系统存在安全问题
> 
> 思考存在的安全问题
> 
> 解决这些安全问题
> 
> 涉及到钱的（被攻击，被刷）
> 
> 设置开关，提高风险可控性


- 第三方的风险控制 <a href="#v6"></a>

> 涉及到第三方数据时，要考虑是否可以拿到第三方数据（可行性）,稳定性,及时性
> 


- 系统的特点

> 高可用系统(银行系统等)
>
> 稳定性，安全性，基本可用性（类似管理后台）
> 
> [高可用系统](http://coolshell.cn/articles/17459.html#more-17459)


[#v1]:#v1
[#v2]:#v2
[#v3]:#v3
[#v4]:#v4
[#v5]:#v5
[#v6]:#v6
