---
layout: post
title:  "java 8 总结"
date:  2016-08-18 13:50:00 +0800
categories: java
tags: java
keywords: java,web1992
---

>`java8` 总结,记录`java8`学习日记
>

<!--more-->

>参考的教程
>

- [博客园](http://www.cnblogs.com/davidwang456/p/4760559.html)
- [IMB](https://www.ibm.com/developerworks/cn/java/j-lo-java8streamapi/)

>先看一段代码
>
	
{% highlight java %}

    public static void main(String[] args) {
        List<String> stringList = Arrays.asList("A", "b", "c", "D", "1", "e", "f");

        List<String> collect = stringList.stream()
                .sorted()
                .map(String::toUpperCase)
                .filter(item -> {
                    System.out.println("filter1 " + item);
                    return true;
                })
                .map(s -> s.toLowerCase())
                .filter(item -> {
                    System.out.println("filter2 " + item);
                    return true;
                }).collect(Collectors.toList());


        collect.stream()
                .forEach(item -> {
                    System.out.println("forEach " + item);
                });
    }

{% endhighlight %}

>输出结果
	
	filter1 1
	filter2 1
	filter1 A
	filter2 a
	filter1 D
	filter2 d
	filter1 B
	filter2 b
	filter1 C
	filter2 c
	filter1 E
	filter2 e
	filter1 F
	filter2 f
	forEach 1
	forEach a
	forEach d
	forEach b
	forEach c
	forEach e
	forEach f

>有没有感觉很奇怪?
>
>按照我的想法是会先打印 filter1  相关的内容，再打印 filter2
>
>但实际是，打印filter1，再打印filter2 说明整个循环只执行了一次,效率并不低


 
>parallelStream() 与  stream()
>
 
	parallelStream 多线程,当数据较多的时候，可以采用此
	
	stream 单线程


>常用的方法


	map
	
	filter
	
	forEach
	
	sorted
	
	collect
	
	flatMap
	
	anyMatch
	
	noneMatch
	
	mapToInt
	
	mapToObj
	
	ifPresent

	
>函数式接口

	supplier 	// 供应者
	
	accumulator // 积聚者
	
	combiner 	// 组合器
	
	finisher	// 整理工


